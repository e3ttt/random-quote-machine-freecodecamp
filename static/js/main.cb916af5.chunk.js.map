{"version":3,"sources":["constants/Colors.js","components/QuoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["Colors","primary","primaryLight","twitterLogo","styles","quotebox","backgroundColor","width","borderRadius","boxShadow","display","flexDirection","justifyContent","alignItems","padding","quote","fontSize","fontWeight","textTransform","color","textAlign","textShadow","author","fontStyle","twitter","border","marginTop","button","outline","QuoteBox","useState","quoteObj","setQuoteObj","getNewQuote","setGetNewQuote","useEffect","fetch","method","then","response","json","data","randomInt","Math","floor","random","quotes","length","id","style","onClick","href","target","root","height","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAMeA,G,MANA,CACbC,QAAS,UACTC,aAAc,UACdC,YAAa,YCqDTC,EAAS,CACbC,SAAU,CACRC,gBAAiB,QACjBC,MAAO,OACPC,aAAc,OACdC,UAAW,qBACXC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,QAAS,QAEXC,MAAO,CACLC,SAAU,OACVC,WAAY,OACZC,cAAe,YACfC,MAAOnB,EAAOE,aACdkB,UAAW,SACXC,WAAW,eAAD,OAAiBrB,EAAOC,UAEpCqB,OAAQ,CACNC,UAAW,SACXN,WAAY,OACZE,MAAOnB,EAAOC,QACde,SAAU,SACVF,QAAS,UAEXU,QAAS,CACPC,OAAO,aAAD,OAAezB,EAAOG,aAC5BW,QAAS,WACTN,aAAc,GACdkB,UAAW,IAEbC,OAAQ,CACNrB,gBAAiBN,EAAOE,aACxBiB,MAAO,QACPM,OAAQ,OACRX,QAAS,GACTE,SAAU,OACVE,cAAe,YACfV,aAAc,OACdoB,QAAS,OACTnB,UAAW,mCAIAoB,EA/FE,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACdC,EADc,KACJC,EADI,OAEiBF,oBAAS,GAF1B,mBAEdG,EAFc,KAEDC,EAFC,KAIrBC,qBAAU,WACRC,MACE,yIACA,CACEC,OAAQ,QAGTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAMC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,OAAOC,QACzDf,EAAYS,EAAKK,OAAOJ,IACxBR,GAAe,QAElB,CAACD,IAMJ,OACE,sBAAKe,GAAG,YAAYC,MAAO7C,EAAOC,SAAlC,UACE,qBAAK2C,GAAG,OAAOC,MAAO7C,EAAOW,MAA7B,SACGgB,EAAShB,QAEZ,sBAAKiC,GAAG,SAASC,MAAO7C,EAAOkB,OAA/B,gBACMS,EAAST,UAEf,8BACE,wBAAQ0B,GAAG,YAAYE,QAbN,WACrBhB,GAAe,IAYqCe,MAAO7C,EAAOuB,OAA9D,yBAIF,qBAAKsB,MAAO7C,EAAOoB,QAAnB,SACE,mBACEwB,GAAG,cACHG,KAAI,iEAA4DpB,EAAShB,MAArE,gBAAkFgB,EAAST,QAC/F8B,OAAO,SAHT,SAKE,cAAC,IAAD,CAAajC,MAAOnB,EAAOG,YAAaa,SAAS,iBCnC3D,IAAMZ,EAAS,CACbiD,KAAM,CACJ3C,QAAS,OACTE,eAAgB,SAChBC,WAAY,SACZyC,OAAQ,QACRhD,gBAAiBN,EAAOC,UAIbsD,EAlBf,WACE,OACE,qBAAKN,MAAO7C,EAAOiD,KAAnB,SACE,cAAC,EAAD,OCGSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cb916af5.chunk.js","sourcesContent":["const Colors = {\n  primary: '#12467f',\n  primaryLight: '#6195ce',\n  twitterLogo: '#3ea2f3',\n};\n\nexport default Colors;\n","import React, { useState, useEffect } from 'react';\nimport LogoTwitter from 'react-ionicons/lib/LogoTwitter';\n\nimport './QuoteBox.css';\n\nimport Colors from '../constants/Colors';\n\nconst QuoteBox = () => {\n  const [quoteObj, setQuoteObj] = useState({});\n  const [getNewQuote, setGetNewQuote] = useState(false);\n\n  useEffect(() => {\n    fetch(\n      'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json',\n      {\n        method: 'GET',\n      },\n    )\n      .then(response => response.json())\n      .then(data => {\n        const randomInt = Math.floor(Math.random() * data.quotes.length);\n        setQuoteObj(data.quotes[randomInt]);\n        setGetNewQuote(false);\n      });\n  }, [getNewQuote]);\n\n  const handleNewQuote = () => {\n    setGetNewQuote(true);\n  };\n\n  return (\n    <div id=\"quote-box\" style={styles.quotebox}>\n      <div id=\"text\" style={styles.quote}>\n        {quoteObj.quote}\n      </div>\n      <div id=\"author\" style={styles.author}>\n        by {quoteObj.author}\n      </div>\n      <div>\n        <button id=\"new-quote\" onClick={handleNewQuote} style={styles.button}>\n          New quote\n        </button>\n      </div>\n      <div style={styles.twitter}>\n        <a\n          id=\"tweet-quote\"\n          href={`https://twitter.com/intent/tweet?hashtags=quotes&text=\"${quoteObj.quote}\" By ${quoteObj.author}`}\n          target=\"_blank\"\n        >\n          <LogoTwitter color={Colors.twitterLogo} fontSize=\"32px\" />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  quotebox: {\n    backgroundColor: 'white',\n    width: '50vw',\n    borderRadius: '10px',\n    boxShadow: '2px 2px 10px black',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2rem',\n  },\n  quote: {\n    fontSize: '3rem',\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n    color: Colors.primaryLight,\n    textAlign: 'center',\n    textShadow: `2px 2px 2px ${Colors.primary}`,\n  },\n  author: {\n    fontStyle: 'italic',\n    fontWeight: 'bold',\n    color: Colors.primary,\n    fontSize: '1.5rem',\n    padding: '2rem 0',\n  },\n  twitter: {\n    border: `2px solid ${Colors.twitterLogo}`,\n    padding: '5px 20px',\n    borderRadius: 20,\n    marginTop: 20,\n  },\n  button: {\n    backgroundColor: Colors.primaryLight,\n    color: 'white',\n    border: 'none',\n    padding: 20,\n    fontSize: '1rem',\n    textTransform: 'uppercase',\n    borderRadius: '15px',\n    outline: 'none',\n    boxShadow: '2px 2px 5px rgba(0, 0, 0, 0.5)',\n  },\n};\n\nexport default QuoteBox;\n","import React from 'react';\n\nimport QuoteBox from './components/QuoteBox';\n\nimport Colors from './constants/Colors';\n\nfunction App() {\n  return (\n    <div style={styles.root}>\n      <QuoteBox />\n    </div>\n  );\n}\n\nconst styles = {\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    backgroundColor: Colors.primary,\n  },\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}